asyncapi: '3.0.0'

info:
    title: Equestrian Data Events APIs
    version: '0.1.0'
    description: This API describes events related to the horse sport domain.
    #termsOfService: 'https://www.equestriandata.org/terms'
    license:
        name: Apache 2.0
        url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
    #contact:
    #    name: Equestrian Data API Support
    #    url: 'https://www.equestriandata.org/support'
    tags:
        - name: events
          description: Events related to horse sports.
        - name: horses
          description: Horse related events
        - name: riders
          description: Rider related events
        - name: results
          description: Events related to results in competitions.

channels:
  lightMeasured:
    address: 'event-ingest'
    messages:
      org.equestriandata.event.published:
        $ref: '#/components/messages/org.equestriandata.event.published'

components:
    schemas:
        CloudEvent:
            description: Cloud Events are a specification for describing event data in a common way.
            type: object
            required:
                - specversion
                - type
                - source
                - id
                - time
                - datacontenttype
            properties:
                specversion:
                    type: string
                    description: CloudEvents specification version.
                    enum: ["1.0"]
                type:
                    type: string
                    description: Type of the event.
                    example: "org.equestriandata.event.created"
                source:
                    type: string
                    description: Source of the event.
                    example: https://github.com/cloudevents/spec/pull
                id:
                    type: string
                    description: Unique identifier of the event instance.
                    example: "3a3d60f8-5c91-4e5a-a6ed-b05b6d7b3a43"
                time:
                    type: string
                    format: date-time
                    description: Timestamp of when the event was produced.
                    example: 2018-04-05T17:31:00Z
                datacontenttype:
                    type: string
                    description: Content type of the event data.
                    enum: ["application/json"]

        NormativeDiscipline:
            type: string
            description: Normative discipline. This is a standardized list of disciplines.
            enum: [Jumping, Dressage, Para Dressage, Eventing, Driving, Endurance, Vaulting, Breeding, Working Equitation, Polo, Racing, other]

        Person:
            type: object
            required: 
                - identifiers
                - lastUpdatedOn
            description: Person entity.
            properties:
                identifiers:
                    type: array
                    description: Identifiers of the person.
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/Identifier'
                title:
                    type: string
                    description: Title of the person.
                    example: "Dr."
                firstName:
                    type: string
                    description: First name of the person.
                    example: "John"
                middleName:
                    type: string
                    description: Middle name of the person.
                    example: "Doe"
                lastName:
                    type: string
                    description: Last name of the person.
                    example: "Doe"
                dayOfBirth:
                    type: string
                    format: date-time
                    description: Date of birth of the person.
                    example: "2007-03-01"
                yearOfBirth:
                    type: integer
                    description: Year of birth of the person.
                    example: 2007
                gender:
                    type: string
                    enum: [male, female, other]
                lastUpdatedOn:
                    $ref: '#/components/schemas/LastUpdatedOn'

        PreviousHorseName:
            type: object
            description: Previous name of the horse.
            required:
                - name
            properties:
                name:
                    type: string
                    description: Name of the horse.
                    example: "Secretariat"
                fromDate:
                    type: string
                    format: date-time
                    description: Start date of the name.
                    example: "2007-03-01"
                toDate:
                    type: string
                    format: date-time
                    description: End date of the name.
                    example: "2007-03-01"

        Horse:
            type: object
            required:
                - identifiers
                - currentName
            description: Horse entity.
            properties:
                identifiers:
                    type: array
                    description: Identifiers of the horse.
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/Identifier'
                currentName:
                    type: string
                    description: Name of the horse.
                    example: "Secretariat"
                previousNames:
                    type: array
                    description: Previous names of the horse.
                    items:
                        $ref: '#/components/schemas/PreviousHorseName'
                dayOfBirth:
                    type: string
                    format: date-time
                    description: Date of birth of the person.
                    example: "2007-03-01"
                yearOfBirth:
                    type: integer
                    description: Year of birth of the person.
                    example: 2007
                gender:
                    type: string
                    enum: [stallion, mare, gelding]
                color:
                    type: string
                    description: A free form text field for the color of the horse.
                normativeColor:
                    $ref: '#/components/schemas/NormativeColor'

        LastUpdatedOn:
            type: string
            format: date-time
            example: "2007-03-01T13:00:00Z"
            description: Timestamp of when the entity was last updated. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
            externalDocs:
                description: ISO 8601
                url: https://en.wikipedia.org/wiki/ISO_8601

        Country:
            type: object
            description: Country where the event is held. A valid country object **MUST** contain at least one valid identifier.
            oneOf:
                - required: [iso2]
                - required: [iso3]
                - required: [ioc]
            properties:
                iso2:
                    type: string
                    description: ISO 3166-1 alpha-2 country code.
                    example: DE
                    length: 2
                    externalDocs:
                        description: ISO 3166-1 alpha-3
                        url: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3
                iso3:
                    type: string
                    description: ISO 3166-1 alpha-3 country code.
                    example: DEU
                    length: 3
                    externalDocs:
                        description: ISO 3166-1 alpha-3
                        url: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3
                ioc:
                    type: string
                    description: International Olympic Committee country code.
                    example: GER
                    length: 3
                    externalDocs:
                        description: IOC
                        url: https://en.wikipedia.org/wiki/List_of_IOC_country_codes

        GeoLocation:
            type: object
            required:
                - latitude
                - longitude
            description: Describes a geo coordinate based on [ISO 6709](https://en.wikipedia.org/wiki/ISO_6709).
            externalDocs:
                description: ISO 6709
                url: https://en.wikipedia.org/wiki/ISO_6709
            properties:
                latitude:
                    type: number
                    description: Latitude of the place.
                    example: 50.776351
                longitude:
                    type: number
                    description: Longitude of the place.
                    example: 6.083862

        LocalizedText:
            type: object
            required:
              - locale
              - text
            description: Localized text based on [ISO 639](https://en.wikipedia.org/wiki/ISO_639).
            externalDocs:
                description: ISO 639
                url: https://en.wikipedia.org/wiki/ISO_639
            properties:
                locale:
                    type: string
                    description: Language code of the text based on [ISO 639](https://en.wikipedia.org/wiki/ISO_639).
                    example: en
                text:
                    type: string
                    description: Localized text.
                    example: "Aachen"

        Identifier:
            type: object
            description: An identifier is a composite value object of the provider and a value of the identifier. The reason for that is that different systems use very different identifiers and transferring data from one system to another might involve cases in which more than one provider is required as well.
            required:
                - value
                - type
                - provider
            properties:
                value:
                    type: string
                    description: Unique identifier of the entity.
                    example: 12345
                type:
                    type: string
                    description: Type of the identifier.
                    example: "UUID"
                    enum: [UUID, INTEGER, STRING]
                provider:
                    type: string
                    description: Provider of the identifier.
                    example: "FEI"

        Competitor:
            type: object
            required:
              - identifiers
              - persons
              - horses
              - lastUpdatedOn
            description: Competitor entity.
            properties:
                identifiers:
                    type: array
                    description: Identifiers of the competitor.
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/Identifier'
                persons:
                    type: array
                    items:
                        $ref: '#/components/schemas/Person'
                horses:
                    type: array
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/Horse'
                rank:
                    type: integer
                    description: Rank of the competitor.
                    example: 1
                lastUpdatedOn:
                    $ref: '#/components/schemas/LastUpdatedOn'

        Address:
            type: object
            description: Address entity.
            properties:
                identifiers:
                    type: array
                    description: Identifiers of the address.
                    items:
                        $ref: '#/components/schemas/Identifier'
                addressLine:
                    type: string
                    description: Street name and number.
                    example: "Samplestreet 123"
                addressLine2:
                    type: string
                    description: Used for additional address information.
                    example: "Building A Room 123"
                city:
                    type: string
                    description: City name.
                    example: "Aachen"
                postalCode:
                    type: string
                    description: Postal code.
                    example: "52062"
                country:
                    $ref: '#/components/schemas/Country'
                geoLocation:
                    $ref: '#/components/schemas/GeoLocation'

        ScoreData:
            type: object
            required:
              - competitorIdentifiers
              - resultIdentifiers
              - scoreSchema
              - scoreType
              - score
            properties:
                competitorIdentifiers:
                    type: array
                    description: Identifiers of the competitor.
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/Identifier'
                resultIdentifiers:
                    type: array
                    description: Identifiers of the result.
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/Identifier'
                scoreSchema:
                    type: string
                    description: JSON Schema of the score.
                    format: uri
                scoreType:
                    type: string
                    description: Type of the score, **MUST** match the object in Score.
                score:
                    oneOf:
                        - $ref: '#/components/schemas/JumpingScoreData'
                        - $ref: '#/components/schemas/DressageScoreData'

        DressageScoreData:
            type: object
            properties:
                Score:
                    type: number
                    description: Score of the dressage competition.
                    example: 0.0
                Rank:
                    type: integer
                    description: Rank of the competitor.
                    example: 1
                PenaltyPoints:
                    type: integer
                    description: Penalty points of the competitor.
                    example: 2

        NormativeColor:
            type: string
            description: Normative color. This is a standardized list of colors.
            enum: [Black, Brown, Bay-brown, Bay, Chestnut, Grey, Strawberry, Piebald, Skewbald, Dun, Cream, Polomino, Appaloosa]

        Currency:
            type: object
            description: Currency entity.
            properties:
                value:
                    type: number
                    description: The value of the money. The value of the money using the comma decimal notation. Values must always specify the complete value, “11,00” instead of “11”.
                    example: "123,41"
                currency:
                    type: string
                    description: "[ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 3 character currency code."
                    example: "EUR"

        JumpingScoreData:
            type: object
            properties:
                Score:
                    type: number
                    description: Score of the jumping competition.
                    example: 0.0
                Rank:
                    type: integer
                    description: Rank of the competitor.
                    example: 1
                PenaltyPoints:
                    type: integer
                    description: Penalty points of the competitor.
                    example: 2

        EventPublishedData:
            type: object
            required:
                - data
            properties:
                data:
                    type: object
                    description: Event payload.
                    required:
                        - Identifiers
                        - OrganizerIdentifiers
                        - EventName
                        - StartDate
                        - EndDate
                    properties:
                        Identifiers:
                            type: array
                            description: Identifiers of the event.
                            example: Aachen 2020
                            minItems: 1
                            items:
                                $ref: '#/components/schemas/Identifier'
                        OrganizerIdentifiers:
                            type: array
                            description: Identifiers of the event organizer.
                            minItems: 1
                            items:
                                $ref: '#/components/schemas/Identifier'
                        EventName:
                            type: string
                            description: Name of the event.
                        Description:
                            $ref: '#/components/schemas/LocalizedText'
                            description: Description of the event.
                        StartDate:
                            type: string
                            format: date
                            description: Start date of the event.
                            example: 2007-12-20
                        EndDate:
                            type: string
                            format: date
                            description: End date of the event.
                            example: 2007-12-20
                        Country:
                            type: object
                            description: Country where the event is held.
                            properties:
                                Name:
                                    type: string
                                    description: Name of the country.
                                Code:
                                    type: string
                                    description: ISO 3166-1 alpha-2 country code.
                        LastUpdatedOn:
                            $ref: '#/components/schemas/LastUpdatedOn'

        CompetitionPublishedData:
            type: object
            required:
                - data
            properties:
                data:
                    type: object
                    description: Event payload.
                    required:
                        - CompetitionIdentifiers
                        - EventIdentifiers
                        - CompetitionName
                        - StartDate
                    properties:
                        CompetitionIdentifiers:
                            type: array
                            description: Identifiers of the competition.
                            minItems: 1
                            items:
                                $ref: '#/components/schemas/Identifier'
                        EventIdentifiers:
                            type: array
                            description: Identifiers of the event.
                            minItems: 1
                            items:
                                $ref: '#/components/schemas/Identifier'
                        CompetitionName:
                            type: string
                            description: Name of the competition.
                        SponsorTitle:
                            type: string
                            description: Sponsor Title
                        Description:
                            $ref: '#/components/schemas/LocalizedText'
                            description: Description of the competition.
                        StartDate:
                            type: string
                            format: date
                            description: Start date of the competition.
                            example: 2007-12-20
                        EndDate:
                            type: string
                            format: date
                            description: End date of the competition.
                            example: 2007-12-20
                        StartTime:
                            type: string
                            format: date-time
                            description: Start time of the competition. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                            example: 2007-12-20T13:00:00Z
                        EndTime:
                            type: string
                            format: date-time
                            description: End time of the competition. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
                            example: 2007-12-20T13:00:00Z
                        Discipline:
                            type: string
                            description: Discipline of the competition, free form text.
                        NormativeDiscipline:
                            type: string
                            description: Normative discipline of the competition.
                            enum: [ShowJumping, Racing, NeedsToBeDefined]
                        LastUpdatedOn:
                            $ref: '#/components/schemas/LastUpdatedOn'

        CompetitorRankUpdated:
            type: object
            properties:
                data:
                    type: object
                    description: Event payload.
                    properties:
                        CompetitionIdentifiers:
                            type: array
                            description: Identifiers of the competitor.
                            items:
                                $ref: '#/components/schemas/Identifier'
                        Rank:
                            type: integer
                            description: Rank of the competitor.

        CompetitorListPublishedData:
            type: object
            required:
                - data
            properties:
                data:
                    type: object
                    description: Event payload.
                    required:
                        - CompetitionIdentifiers
                        - Competitors
                    properties:
                        CompetitionIdentifiers:
                            type: array
                            description: Identifiers of the competition.
                            minItems: 1
                            items:
                                $ref: '#/components/schemas/Identifier'
                        Competitors:
                            type: array
                            description: List of competitors.
                            minItems: 1
                            items:
                                $ref: '#/components/schemas/Competitor'

        ResultPublishedData:
            type: object
            required:
                - data
            properties:
                data:
                    type: object
                    description: Event payload.
                    required:
                        - CompetitionIdentifiers
                        - CompetitorIdentifiers
                        - ScoreData
                    properties:
                        CompetitionIdentifiers:
                            type: array
                            description: Identifiers of the competition.
                            minItems: 1
                            items:
                                $ref: '#/components/schemas/Identifier'
                        CompetitorIdentifiers:
                            type: array
                            description: List of competitors.
                            minItems: 1
                            items:
                                $ref: '#/components/schemas/Identifier'
                        ScoreData:
                            type: object
                            description: Score data.
                            minItems: 1
                            schema:
                                $ref: '#/components/schemas/ScoreData'

        CompetitorRemovedData:
            type: object
            required:
                - data
            properties:
                data:
                    type: object
                    description: Event payload.
                    properties:
                        CompetitionIdentifiers:
                            type: array
                            description: Identifiers of the competition.
                            items:
                                $ref: '#/components/schemas/Identifier'
                        CompetitorIdentifiers:
                            type: array
                            description: List of competitors.
                            items:
                                $ref: '#/components/schemas/Identifier'

        CompetitorAddedData:
            type: object
            required:
                - data
            properties:
                data:
                    type: object
                    description: Event payload.
                    properties:
                        CompetitionIdentifiers:
                            type: array
                            description: Identifiers of the competition.
                            items:
                                $ref: '#/components/schemas/Identifier'
                        Competitor:
                            type: object
                            description: Competitor entity.
                            $ref: '#/components/schemas/Competitor'

    messages:
        org.equestriandata.event.published:
            name: org.equestriandata.event.published
            title: A new event was published.
            summary: Notification about a newly created horse sport event that didn't exist before in the system sending the event.
            contentType: application/json
            tags:
                - name: events
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'
                    - $ref: '#/components/schemas/EventPublishedData'

        org.equestriandata.competition.published:
            name: org.equestriandata.competition.published
            title: A new competition for an event was published that didn't exist before in the system.
            contentType: application/json
            tags:
                - name: competition
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'
                    - $ref: '#/components/schemas/CompetitionPublishedData'

        org.equestriandata.competition.time.changed:
            name: org.equestriandata.competition.time.changed
            title: The start or end date or time of a competition was changed.
            contentType: application/json
            tags:
                - name: competition
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'
                    - $ref: '#/components/schemas/CompetitionPublishedData'

        org.equestriandata.competitor.list.published:
            name: org.equestriandata.competitor.list.published
            title: A new competitor list for a competition was published.
            contentType: application/json
            tags:
                - name: competition
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'
                    - $ref: '#/components/schemas/CompetitorListPublishedData'

        org.equestriandata.competitor.result.published:
            name: org.equestriandata.competitor.result.published
            title: A competitor result was published, this must the the first in a series of results.
            contentType: application/json
            tags:
                - name: competition
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'
                    - $ref: '#/components/schemas/ResultPublishedData'

        org.equestriandata.competitor.result.updated:
            name: org.equestriandata.competitor.result.updated
            title: The result of a competitor in a competition was updated.
            contentType: application/json
            tags:
                - name: competition
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'
                    - $ref: '#/components/schemas/ResultPublishedData'

        org.equestriandata.competitor.removed:
            name: org.equestriandata.competitor.removed
            title: A competitor was removed from a competition.
            contentType: application/json
            tags:
                - name: competition
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'
                    - $ref: '#/components/schemas/CompetitorRemovedData'

        org.equestriandata.competitor.added:
            name: org.equestriandata.competitor.added
            title: A competitor was added to a competition.
            contentType: application/json
            tags:
                - name: competition
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'
                    - $ref: '#/components/schemas/CompetitorAddedData'

        org.equestriandata.competitor.withdrew:
            name: org.equestriandata.competitor.result.withdrew
            title: A competitor withdrew from a competition.
            contentType: application/json
            tags:
                - name: competition
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'

        org.equestriandata.competitor.rank.updated:
            name: org.equestriandata.competitor.rank.changed
            title: The rank of a competitor in a competition was changed.
            contentType: application/json
            tags:
                - name: competition
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'

        org.equestriandata.competition.start.order.changed:
            name: org.equestriandata.competition.start.order.changed
            title: The start order of a competition was changed.
            contentType: application/json
            tags:
                - name: competition
            payload:
                allOf:
                    - $ref: '#/components/schemas/CloudEvent'

## DONE
  #Event erstellt
  #Wenn der Datenprovider ein Event erstellt oder published, also das erste mal ein Event veröffentlicht.
  #Competition erstellt:
  #Wenn der Datenprovider einen Wettkampf veröffentlicht. Das kann sein, dass er einzeln die Wettkämpfe veröffentlicht oder das es eine Liste von Wettkämpfen sind.
  #Competitor List create
  #Wenn der Datenprovider eine Teilnehmerliste veröffentlicht, die zu einem Wettkampf gehört
#Result Published
  #Wenn der Datenprovider für einen Teilnehmer eines Wettkampfes ein Ergebnis vorliegen hat
  #Result Updated
  #Wenn der Datenprovider ein Ergebnis aktualisiert, z.B sich der Wert des Ergebnisses verändert oder sich der Rank verändert, weil andere Teilnehmer besser sind.

## TODO

#Event update:
#Wenn der Datenprovider etwas am Event verändert. Z.B sich das Datum verändert.
#Competition update:
#Wenn der Datenprovider etwas am Wettkampf ändert. Meistens wird das die Startzeit sein, die sich ändert.

#Competitor List update
#Wenn der Datenprovider eine Teilnehmerliste verändert, weil sich z.B die Startreihenfolge geändert hat oder ein Reiter hinzugekommen ist.
